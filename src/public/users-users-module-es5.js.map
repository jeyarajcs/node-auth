{"version":3,"sources":["webpack:///src/app/users/add-edit.component.ts","webpack:///src/app/users/add-edit.component.html","webpack:///src/app/users/layout.component.ts","webpack:///src/app/users/layout.component.html","webpack:///src/app/users/list.component.ts","webpack:///src/app/users/list.component.html","webpack:///src/app/users/users-routing.module.ts","webpack:///src/app/users/users.module.ts"],"names":["AddEditComponent","formBuilder","route","router","accountService","alertService","loading","submitted","id","snapshot","params","isAddMode","passwordValidators","minLength","push","required","form","group","name","email","phone","age","occupation","caption","address","profilePicture","getById","pipe","subscribe","data","x","f","setValue","clear","invalid","createUser","updateUser","register","value","success","keepAfterRouteChange","navigate","relativeTo","error","update","status","emailURL","window","open","event","file","target","files","reader","FileReader","onload","handleReaderLoaded","bind","readAsBinaryString","e","console","log","btoa","result","patchValue","controls","onSubmit","onFileChange","templateUrl","LayoutComponent","ListComponent","users","getAll","user","find","_id","isDeleting","filter","routes","path","component","children","UsersRoutingModule","forChild","imports","exports","UsersModule","declarations"],"mappings":"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","file":"users-users-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'add-edit.component.html' })\r\nexport class AddEditComponent implements OnInit {\r\n    form: FormGroup;\r\n    id: string;\r\n    isAddMode: boolean;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n        \r\n        // password not required in edit mode\r\n        const passwordValidators = [Validators.minLength(6)];\r\n        if (this.isAddMode) {\r\n            passwordValidators.push(Validators.required);\r\n        }\r\n\r\n        this.form = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            email: ['', Validators.required],\r\n            phone: [''],\r\n            age: [''],\r\n            occupation:[''],\r\n            caption:[''],\r\n            address:[''],\r\n            profilePicture:['']\r\n        });\r\n\r\n        if (!this.isAddMode) {\r\n            this.accountService.getById(this.id)\r\n                .pipe(first())\r\n                .subscribe(data => {\r\n                    let x=data.data\r\n                    this.f.name.setValue(x.name);\r\n                    this.f.email.setValue(x.email);\r\n                    this.f.phone.setValue(x.phone);\r\n                    this.f.age.setValue(x.age);\r\n                    this.f.occupation.setValue(x.occupation);\r\n                    this.f.caption.setValue(x.caption);\r\n                    this.f.address.setValue(x.address);\r\n                    this.f.profilePicture.setValue(x.profilePicture);\r\n                });\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        if (this.isAddMode) {\r\n            this.createUser();\r\n        } else {\r\n            this.updateUser();\r\n        }\r\n    }\r\n\r\n    private createUser() {\r\n        this.accountService.register(this.form.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.alertService.success('User added successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['.', { relativeTo: this.route }]);\r\n                },\r\n                error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n\r\n    private updateUser() {\r\n        this.accountService.update(this.id, this.form.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                        this.alertService.success('Update successful', { keepAfterRouteChange: true });\r\n                        this.router.navigate(['..', { relativeTo: this.route }]);\r\n                        if(data.status == \"success\" && data.data && data.data.emailURL){\r\n                            window.open(data.data.emailURL, \"_blank\");\r\n                        }\r\n                },\r\n                error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                });\r\n    }\r\n\r\n    onFileChange(event) {\r\n  \r\n        {\r\n            const file = event.target.files[0];\r\n          \r\n            if (file) {\r\n              const reader = new FileReader();\r\n          \r\n              reader.onload = this.handleReaderLoaded.bind(this);\r\n              reader.readAsBinaryString(file);\r\n            }\r\n        }\r\n}\r\n\r\nhandleReaderLoaded(e) {\r\n    //this.base64textString.push('data:image/png;base64,' + btoa(e.target.result));\r\n    console.log('data:image/png;base64,' + btoa(e.target.result))\r\n    this.form.patchValue({\r\n        profilePicture: 'data:image/png;base64,' + btoa(e.target.result)\r\n    })\r\n  }\r\n}","<h1 *ngIf=\"isAddMode\">Add User</h1>\r\n<h1 *ngIf=\"!isAddMode\">Edit User</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"name\">Name</label>\r\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\r\n            <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.name.errors.required\">Name is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"Email\">Email</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"phone\">Phone</label>\r\n            <input type=\"text\" formControlName=\"phone\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" />\r\n            <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.phone.errors.required\">Phone number is required</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"age\">Age</label>\r\n            <input type=\"number\" formControlName=\"age\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.age.errors }\" />\r\n            <div *ngIf=\"submitted && f.age.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.age.errors.required\">Age</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"occupation\">Occupation</label>\r\n            <input type=\"text\" formControlName=\"occupation\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.occupation.errors }\" />\r\n            <div *ngIf=\"submitted && f.occupation.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.occupation.errors.required\">Occupation</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"caption\">Caption</label>\r\n            <input type=\"text\" formControlName=\"caption\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.caption.errors }\" />\r\n            <div *ngIf=\"submitted && f.caption.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.caption.errors.required\">Caption</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col\">\r\n            <label for=\"address\">Address</label>\r\n            <input type=\"text\" formControlName=\"address\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.address.errors }\" />\r\n            <div *ngIf=\"submitted && f.address.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.address.errors.required\">Address</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n            <label for=\"file\">Profile Picture</label>\r\n        <input \r\n            id=\"file\" \r\n            type=\"file\" \r\n            class=\"form-control\"\r\n            (change)=\"onFileChange($event)\">\r\n        <div *ngIf=\"f.profilePicture && f.profilePicture.invalid\" class=\"alert alert-danger\">\r\n            <div *ngIf=\"f.profilePicture.errors.required\">File.</div>\r\n        </div>\r\n            <!-- <label for=\"profilePicture\">Profile Picture</label>\r\n            <input type=\"text\" formControlName=\"profilePicture\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.profilePicture.errors }\" />\r\n            <div *ngIf=\"submitted && f.profilePicture.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.profilePicture.errors.required\">Profile picture</div>\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Save\r\n        </button>\r\n        <a routerLink=\"/users\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form>","import { Component } from '@angular/core';\r\n\r\n@Component({ templateUrl: 'layout.component.html' })\r\nexport class LayoutComponent { }","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'list.component.html' })\r\nexport class ListComponent implements OnInit {\r\n    users = null;\r\n\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    ngOnInit() {\r\n        this.accountService.getAll()\r\n            .pipe(first())\r\n            .subscribe(users => this.users = users.data);\r\n    }\r\n\r\n    deleteUser(id: string) {\r\n        const user = this.users.find(x => x._id === id);\r\n        user.isDeleting = true;\r\n        this.accountService.delete(id)\r\n            .pipe(first())\r\n            .subscribe(() => {\r\n                this.users = this.users.filter(x => x._id !== id) \r\n            });\r\n    }\r\n}","<h1>Users</h1>\r\n<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Add User</a>\r\n<table class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <th style=\"width: 30%\">Name</th>\r\n            <th style=\"width: 30%\">Email</th>\r\n            <th style=\"width: 30%\">Phone</th>\r\n            <th style=\"width: 30%\">DP</th>\r\n            <th style=\"width: 10%\"></th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let user of users\">\r\n            <td>{{user.name}}</td>\r\n            <td>{{user.email}}</td>\r\n            <td>{{user.phone}}</td>\r\n            <td><img src=\"{{user.profilePicture}}\" class=\"img\" width=\"75\"></td>\r\n            <td style=\"white-space: nowrap\">\r\n                <a routerLink=\"edit/{{user._id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\r\n                <button (click)=\"deleteUser(user._id)\" class=\"btn btn-sm btn-danger btn-delete-user\" [disabled]=\"user.isDeleting\">\r\n                    <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n                    <span *ngIf=\"!user.isDeleting\">Delete</span>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n        <tr *ngIf=\"!users\">\r\n            <td colspan=\"4\" class=\"text-center\">\r\n                <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: LayoutComponent,\r\n        children: [\r\n            { path: '', component: ListComponent },\r\n            { path: 'add', component: AddEditComponent },\r\n            { path: 'edit/:id', component: AddEditComponent }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ListComponent } from './list.component';\r\nimport { AddEditComponent } from './add-edit.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        UsersRoutingModule\r\n    ],\r\n    declarations: [\r\n        LayoutComponent,\r\n        ListComponent,\r\n        AddEditComponent\r\n    ]\r\n})\r\nexport class UsersModule { }"]}